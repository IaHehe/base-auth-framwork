<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bm.insurance.cloud.sale.dao.SaleUserGroupsMapper">
    <resultMap id="BaseResultMap" type="com.bm.insurance.cloud.sale.model.SaleUserGroup">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="group_id" property="groupId" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, group_id, user_id
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.bm.insurance.cloud.sale.model.SaleUserGroupExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sale_user_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sale_user_group
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sale_user_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.bm.insurance.cloud.sale.model.SaleUserGroupExample">
        delete from sale_user_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bm.insurance.cloud.sale.model.SaleUserGroup">
    insert into sale_user_group (id, group_id, user_id
      )
    values (#{id,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.bm.insurance.cloud.sale.model.SaleUserGroup">
        insert into sale_user_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bm.insurance.cloud.sale.model.SaleUserGroupExample"
            resultType="java.lang.Integer">
        select count(*) from sale_user_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sale_user_group
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.groupId != null">
                group_id = #{record.groupId,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sale_user_group
        set id = #{record.id,jdbcType=BIGINT},
        group_id = #{record.groupId,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bm.insurance.cloud.sale.model.SaleUserGroup">
        update sale_user_group
        <set>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bm.insurance.cloud.sale.model.SaleUserGroup">
    update sale_user_group
    set group_id = #{groupId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!--批量插入-->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into sale_user_group (group_id, user_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.groupId}, #{item.userId} )
        </foreach>
    </insert>

    <!--用户组数据-->
    <select id="findUserGroupinfo"
            parameterType="com.bm.insurance.cloud.sale.dto.SearchUserGroupDto"
            resultType="com.bm.insurance.cloud.sale.dto.SearchUserGroupDto">
        SELECT
        u.id as userId,u.login_name as loginName,
        u.user_name as userName,u.password,u.email,u.`status`,u.mobile,
        u.job_title as jobTitle,u.dept_id as deptId,sd.dept_name as deptName,
        u.update_time as updateTime, u.create_user_name as createUserName,
        sg.id as groupId,sg.group_name as groupName,
        sr.id as roleId, sr.role_name as roleName,sr.role_code as roleCode
        FROM sale_user u
        LEFT JOIN sale_department sd on u.dept_id = sd.id
        LEFT JOIN sale_user_group sug on u.id = sug.user_id
        LEFT JOIN sale_group sg on sg.id = sug.group_id
        LEFT JOIN sale_user_role sur on sur.user_id = u.id
        LEFT JOIN sale_role sr on sr.id = sur.role_id

        WHERE 1=1
        <if test="userId != null">
            and u.id= #{userId}
        </if>

        <if test="groupId != null">
            and sg.id= #{groupId}
        </if>
        <if test="status != null">
            and u.status= #{status}
        </if>
        <if test="loginName != null and loginName !=''">
            and u.login_name LIKE CONCAT('%',CONCAT(#{loginName},'%'))
        </if>
        <if test="userName != null and userName !=''">
            and u.user_name LIKE CONCAT('%',CONCAT(#{userName},'%'))
        </if>
        <if test="jobTitle != null and jobTitle !=''">
            and u.job_title LIKE CONCAT('%',CONCAT(#{jobTitle},'%'))
        </if>
        <if test="deptId != null">
            and u.dept_id= #{deptId}
        </if>

        GROUP BY u.id

    </select>
</mapper>